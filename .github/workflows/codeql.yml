# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "km/adding_code_ql" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '32 5 * * 4'

jobs:
  analyze:
    name: Analyze (csharp)
    
    runs-on: 'ubuntu-latest'
    timeout-minutes: 360
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read
   
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4


    - uses: microsoft/azure-orbital-space-sdk-github-actions/composite-actions/initialize@main
      with:
        GIT_HUB_USER_NAME: ${{ secrets.GIT_HUB_USER_NAME }}
        GIT_HUB_USER_TOKEN: ${{ secrets.GIT_HUB_USER_TOKEN }}
        SETUP_REPO_URL: ${{ secrets.SETUP_REPO_URL }}

    - name: install-codeql
      shell: bash
      run: |
        echo "Determine the latest release version of CodeQL CLI"
        docker exec hostsvc-link bash -c "LATEST_RELEASE=$(curl -s https://api.github.com/repos/github/codeql-cli-binaries/releases/latest | grep \"tag_name\" | awk '{print substr($2, 2, length($2)-3)}')"

        echo "Define the download URL and target directory"
        docker exec hostsvc-link bash -c "DOWNLOAD_URL=\"https://github.com/github/codeql-cli-binaries/releases/download/${LATEST_RELEASE}/codeql-linux64.zip\""
        docker exec hostsvc-link bash -c "TARGET_DIR=\"~/codeql\""
        docker exec hostsvc-link bash -c "ZIP_FILE=\"$TARGET_DIR/codeql.zip\""

        echo "Create target directory if it doesn't exist"
        docker exec hostsvc-link bash -c "mkdir -p \"$TARGET_DIR\""

        echo "Download the latest release of CodeQL CLI"
        echo "Downloading CodeQL CLI ${LATEST_RELEASE}..."
        docker exec hostsvc-link bash -c "curl -L \"$DOWNLOAD_URL\" -o \"$ZIP_FILE\""

        echo "Extract the downloaded zip file"
        echo "Extracting CodeQL CLI..."
        docker exec hostsvc-link bash -c "unzip -o \"$ZIP_FILE\" -d \"$TARGET_DIR\""

        echo "Clean up the zip file"
        docker exec hostsvc-link bash -c "rm \"$ZIP_FILE\""

        echo "Optionally, add CodeQL CLI to PATH by adding it to .bashrc or .bash_profile"
        docker exec hostsvc-link bash -c "echo \"export PATH=\$PATH:$TARGET_DIR/codeql\" >> $HOME/.bashrc"
        docker exec hostsvc-link bash -c "source $HOME/.bashrc"

        echo "CodeQL CLI installation completed."

    - name: Stand up Devcontainer
      shell: bash
      run: |

        devcontainer up --workspace-folder ${PWD} \
            --workspace-mount-consistency cached \
            --id-label devcontainer.local_folder=${PWD} \
            --default-user-env-probe loginInteractiveShell \
            --build-no-cache \
            --remove-existing-container \
            --mount type=volume,source=vscode,target=/vscode,external=true \
            --update-remote-user-uid-default on \
            --mount-workspace-git-root true
        echo $?

    - name: codeql-init
      shell: bash
      run: |
        docker exec hostsvc-link bash -c "codeql database create my-codeql-database --language=csharp"
    
    - name: manual-build-project-service
      shell: bash
      run: |
        docker exec hostsvc-link bash -c "dotnet build /workspaces/hostsvc-link/src"
        echo "output build directory:"
        tree ./src/bin
  
    - name: manual-build-project-plugin-base
      shell: bash
      run: |
        docker exec hostsvc-link bash -c "dotnet build /workspaces/hostsvc-link/src_pluginBase/pluginBase.csproj"  
        echo "output build directory:"
        tree ./src_pluginBase/bin

    - name: codeql-analyze
      shell: bash
      run: |
        docker exec hostsvc-link bash -c "codeql database analyze my-codeql-database security-extended,security-and-quality --format=csv --output=/var/spacedev/tmp/analysis-results.csv"

    - name: Upload analysis results
      uses: actions/upload-artifact@v2
      with:
        name: codeql-analysis-results
        path: /var/spacedev/tmp/analysis-results.csv